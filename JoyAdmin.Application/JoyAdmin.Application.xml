<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JoyAdmin.Application</name>
    </assembly>
    <members>
        <member name="M:JoyAdmin.Application.AlarmHistory.AlarmHistoryService.GetAlarmHistories(JoyAdmin.Application.AlarmHistory.Dtos.AlarmHistoryQueryDto)">
            <summary>
                查询报警信息，站位内容不指定则查询所有报警
            </summary>
            <param name="alarmHistoryQueryDto"></param>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.AlarmHistory.AlarmHistoryService.GetAlarmFreq(JoyAdmin.Application.AlarmHistory.Dtos.AlarmFreqQueryDto)">
            <summary>
                按报警类型和次数topn统计，站位名为空则查询所有站位
            </summary>
            <param name="alarmCountQueryDto"></param>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.AlarmHistory.AlarmHistoryService.GetAlarmCount(JoyAdmin.Application.AlarmHistory.Dtos.AlarmCountQueryDto)">
            <summary>
                时间段内各站位查询报警次数，站位名为空则查询总报警,
            </summary>
            <param name="alarmCountQueryDto"></param>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.AlarmHistory.AlarmHistoryService.PostAlarm(JoyAdmin.Application.AlarmHistory.Dtos.AlarmHistoryCreateDto)">
            <summary>
                上传报警信息
            </summary>
            <param name="alarmHistoryCreateDto"></param>
        </member>
        <member name="M:JoyAdmin.Application.AlarmHistory.DeviceRequestService.GetUnHandledCount">
            <summary>
                未处理的请求
            </summary>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.AlarmHistory.DeviceRequestService.PostDeviceRequest(JoyAdmin.Application.AlarmHistory.Dtos.DeviceRequestCreateDto)">
            <summary>
                增加未处理的请求
            </summary>
        </member>
        <member name="M:JoyAdmin.Application.AlarmHistory.DeviceRequestService.GetUnHandled">
            <summary>
                未处理的请求
            </summary>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.AlarmHistory.DeviceRequestService.GetDeviceRequests(JoyAdmin.Application.AlarmHistory.Dtos.DeviceRequestQueryDto)">
            <summary>
                历史请求查询
            </summary>
        </member>
        <member name="M:JoyAdmin.Application.AlarmHistory.DeviceRequestService.UpdateDeviceRequest(JoyAdmin.Application.AlarmHistory.Dtos.DeviceRequestUpdateDto)">
            <summary>
                更新
            </summary>
        </member>
        <member name="P:JoyAdmin.Application.AlarmHistory.Dtos.AlarmFreqQueryDto.TopN">
            <summary>
                限制返回的top n
            </summary>
        </member>
        <member name="P:JoyAdmin.Application.AlarmHistory.Dtos.AlarmFreqQueryDto.OrderMode">
            <summary>
                0 是按次数 1 是按报警时间
            </summary>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaClientWrapper.#ctor">
            <summary>
                构造函数
            </summary>
        </member>
        <member name="P:JoyAdmin.Application.OPC.OpcUaClientWrapper.ConnectStatus">
            <summary>
                连接状态
            </summary>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaClientWrapper.AddInfoToDic(System.Collections.Generic.Dictionary{System.String,Opc.Ua.DataValue},System.String,Opc.Ua.DataValue)">
            <summary>
                添加数据到字典中（相同键的则采用最后一个键对应的值）
            </summary>
            <param name="dic">字典</param>
            <param name="key">键</param>
            <param name="dataValue">值</param>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaClientWrapper.OpenConnectOfAnonymous(System.String)">
            <summary>
                打开连接【匿名方式】
            </summary>
            <param name="serverUrl">服务器URL【格式：opc.tcp://服务器IP地址/服务名称】</param>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaClientWrapper.OpenConnectOfAccount(System.String,System.String,System.String)">
            <summary>
                打开连接【账号方式】
            </summary>
            <param name="serverUrl">服务器URL【格式：opc.tcp://服务器IP地址/服务名称】</param>
            <param name="userName">用户名称</param>
            <param name="userPwd">用户密码</param>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaClientWrapper.OpenConnectOfCertificate(System.String,System.String,System.String)">
            <summary>
                打开连接【证书方式】
            </summary>
            <param name="serverUrl">服务器URL【格式：opc.tcp://服务器IP地址/服务名称】</param>
            <param name="certificatePath">证书路径</param>
            <param name="secreKey">密钥</param>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaClientWrapper.CloseConnect">
            <summary>
                关闭连接
            </summary>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaClientWrapper.GetCurrentNodeValue``1(System.String)">
            <summary>
                获取到当前节点的值【同步读取】
            </summary>
            <typeparam name="T">节点对应的数据类型</typeparam>
            <param name="nodeId">节点</param>
            <returns>返回当前节点的值</returns>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaClientWrapper.GetCurrentNodeValue(System.String)">
            <summary>
                获取到当前节点数据【同步读取】
            </summary>
            <typeparam name="T">节点对应的数据类型</typeparam>
            <param name="nodeId">节点</param>
            <returns>返回当前节点的值</returns>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaClientWrapper.GetBatchNodeDatasOfSync(System.Collections.Generic.List{Opc.Ua.NodeId})">
            <summary>
                获取到批量节点数据【同步读取】
            </summary>
            <param name="nodeIds">节点列表</param>
            <returns>返回节点数据字典</returns>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaClientWrapper.GetCurrentNodeValueOfAsync``1(System.String)">
            <summary>
                获取到当前节点的值【异步读取】
            </summary>
            <typeparam name="T">节点对应的数据类型</typeparam>
            <param name="nodeId">节点</param>
            <returns>返回当前节点的值</returns>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaClientWrapper.GetBatchNodeDatasOfAsync(System.Collections.Generic.List{Opc.Ua.NodeId})">
            <summary>
                获取到批量节点数据【异步读取】
            </summary>
            <param name="nodeIds">节点列表</param>
            <returns>返回节点数据字典</returns>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaClientWrapper.GetAllRelationNodeOfNodeId(System.String)">
            <summary>
                获取到当前节点的关联节点
            </summary>
            <param name="nodeId">当前节点</param>
            <returns>返回当前节点的关联节点</returns>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaClientWrapper.GetAllRelationNodeValue(System.String)">
            <summary>
                获取到当前节点的关联节点
            </summary>
            <param name="nodeId">当前节点</param>
            <returns>返回当前节点的关联节点</returns>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaClientWrapper.GetCurrentNodeAttributes(System.String)">
            <summary>
                获取到当前节点的所有属性
            </summary>
            <param name="nodeId">当前节点</param>
            <returns>返回当前节点对应的所有属性</returns>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaClientWrapper.WriteSingleNodeIdOfSync``1(System.String,``0)">
            <summary>
                写入单个节点【同步方式】
            </summary>
            <typeparam name="T">写入节点值得数据类型</typeparam>
            <param name="nodeId">节点</param>
            <param name="value">节点对应的数据值(比如:(short)123）)</param>
            <returns>返回写入结果（true:表示写入成功）</returns>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaClientWrapper.BatchWriteNodeIds(System.String[],System.Object[])">
            <summary>
                批量写入节点
            </summary>
            <param name="nodeIdArray">节点数组</param>
            <param name="nodeIdValueArray">节点对应数据数组</param>
            <returns>返回写入结果（true:表示写入成功）</returns>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaClientWrapper.WriteSingleNodeIdOfAsync``1(System.String,``0)">
            <summary>
                写入单个节点【异步方式】
            </summary>
            <typeparam name="T">写入节点值得数据类型</typeparam>
            <param name="nodeId">节点</param>
            <param name="value">节点对应的数据值</param>
            <returns>返回写入结果（true:表示写入成功）</returns>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaClientWrapper.ReadSingleNodeIdHistoryDatas``1(System.String,System.DateTime,System.DateTime)">
            <summary>
                读取单个节点的历史数据记录
            </summary>
            <typeparam name="T">节点的数据类型</typeparam>
            <param name="nodeId">节点</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>返回该节点对应的历史数据记录</returns>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaClientWrapper.ReadSingleNodeIdHistoryDatas(System.String,System.DateTime,System.DateTime)">
            <summary>
                读取单个节点的历史数据记录
            </summary>
            <typeparam name="T">节点的数据类型</typeparam>
            <param name="nodeId">节点</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>返回该节点对应的历史数据记录</returns>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaClientWrapper.SingleNodeIdDatasSubscription(System.String,System.String,System.Action{System.String,Opc.Ua.Client.MonitoredItem,Opc.Ua.Client.MonitoredItemNotificationEventArgs})">
            <summary>
                单节点数据订阅
            </summary>
            <param name="key">订阅的关键字（必须唯一）</param>
            <param name="nodeId">节点</param>
            <param name="callback">数据订阅的回调方法</param>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaClientWrapper.CancelSingleNodeIdDatasSubscription(System.String)">
            <summary>
                取消单节点数据订阅
            </summary>
            <param name="key">订阅的关键字</param>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaClientWrapper.BatchNodeIdDatasSubscription(System.String,System.String[],System.Action{System.String,Opc.Ua.Client.MonitoredItem,Opc.Ua.Client.MonitoredItemNotificationEventArgs})">
            <summary>
                批量节点数据订阅
            </summary>
            <param name="key">订阅的关键字（必须唯一）</param>
            <param name="nodeIds">节点数组</param>
            <param name="callback">数据订阅的回调方法</param>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaClientWrapper.CancelAllNodeIdDatasSubscription">
            <summary>
                取消所有节点的数据订阅
            </summary>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaService.OpenConnect(System.String)">
            <summary>
                连接OPC 服务器
            </summary>
            <param name="serverUrl"></param>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaService.ReadSingleNodeIdHistoryDatas(System.String,System.DateTime,System.DateTime)">
            <summary>
                读取单节点历史记录
            </summary>
            <param name="nodeId"></param>
            <param name="startTime"></param>
            <param name="endTime"></param>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaService.GetCurrentNodeValue(System.String)">
            <summary>
                读取当前节点的值
            </summary>
            <param name="nodeId"></param>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaService.GetCurrentNodeAttributes(System.String)">
            <summary>
                读取当前节点的属性
            </summary>
            <param name="nodeId"></param>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaService.GetAllRelationNodeValue(System.String)">
            <summary>
                读取目录下所有的节点的数据
            </summary>
            <param name="nodeId"></param>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaService.GetAllRelationNodeOfNodeId(System.String)">
            <summary>
                浏览节点下的所有节点信息
            </summary>
            <param name="nodeId"></param>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaService.WriteSingleNodeIdOfAsync(System.String,System.Object)">
            <summary>
                写入单个节点
            </summary>
            <param name="nodeId"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaService.MonitAllRelationNodeOfNodeId(System.String)">
            <summary>
                监听一个组
            </summary>
            <param name="nodeId"></param>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.OPC.OpcUaService.GetCurrentAlarm">
            <summary>
                获取监听到的OPC数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.Production.ProcessControlService.GetProcessRecordByBarCode(System.String)">
            <summary>
            根据条码获取过站信息
            </summary>
        </member>
        <member name="M:JoyAdmin.Application.Production.ProcessControlService.CheckBarCode(System.String,System.String)">
            <summary>
            条码验证
            </summary>
            <param name="barCode"></param>
            <param name="processName"></param>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.Production.ProcessControlService.DataPass(System.String,System.String)">
            <summary>
            数据过站
            </summary>
        </member>
        <member name="M:JoyAdmin.Application.Production.WorkOrderService.UpdateActiveWorkOrder">
            <summary>
            更新活动工单的数量统计
            </summary>
        </member>
        <member name="T:JoyAdmin.Application.RBAC.Dtos.LoginInput">
            <summary>
                登录输入参数
            </summary>
        </member>
        <member name="P:JoyAdmin.Application.RBAC.Dtos.LoginInput.Account">
            <summary>
                用户名
            </summary>
        </member>
        <member name="P:JoyAdmin.Application.RBAC.Dtos.LoginInput.Password">
            <summary>
                密码
            </summary>
        </member>
        <member name="P:JoyAdmin.Application.RBAC.Dtos.RoleDto.Name">
            <summary>
                角色名称
            </summary>
        </member>
        <member name="P:JoyAdmin.Application.RBAC.Dtos.RoleDto.Remark">
            <summary>
                角色描述
            </summary>
        </member>
        <member name="P:JoyAdmin.Application.RBAC.Dtos.SecurityDto.Id">
            <summary>
                id
            </summary>
        </member>
        <member name="P:JoyAdmin.Application.RBAC.Dtos.SecurityDto.UniqueCode">
            <summary>
                唯一权限编码
            </summary>
        </member>
        <member name="P:JoyAdmin.Application.RBAC.Dtos.SecurityDto.UniqueName">
            <summary>
                权限唯一名
            </summary>
        </member>
        <member name="T:JoyAdmin.Application.RBAC.Dtos.UpdatePwdInput">
            <summary>
                登录输入参数
            </summary>
        </member>
        <member name="P:JoyAdmin.Application.RBAC.Dtos.UpdatePwdInput.OldPassword">
            <summary>
                密码
            </summary>
        </member>
        <member name="P:JoyAdmin.Application.RBAC.Dtos.UpdatePwdInput.Password">
            <summary>
                密码
            </summary>
        </member>
        <member name="T:JoyAdmin.Application.RBAC.Dtos.UserDto">
            <summary>
                登录输出参数
            </summary>
        </member>
        <member name="P:JoyAdmin.Application.RBAC.Dtos.UserDto.Id">
            <summary>
                用户Id
            </summary>
        </member>
        <member name="P:JoyAdmin.Application.RBAC.Dtos.UserDto.Account">
            <summary>
                账号
            </summary>
        </member>
        <member name="P:JoyAdmin.Application.RBAC.Dtos.UserDto.Name">
            <summary>
                名称
            </summary>
        </member>
        <member name="P:JoyAdmin.Application.RBAC.Dtos.UserDto.Phone">
            <summary>
                联系方式
            </summary>
        </member>
        <member name="P:JoyAdmin.Application.RBAC.Dtos.UserDto.LinkPost">
            <summary>
                职位
            </summary>
        </member>
        <member name="P:JoyAdmin.Application.RBAC.Dtos.UserDto.Remark">
            <summary>
                备注
            </summary>
        </member>
        <member name="P:JoyAdmin.Application.RBAC.Dtos.UserDto.Token">
            <summary>
                Token
            </summary>
        </member>
        <member name="P:JoyAdmin.Application.RBAC.Dtos.UserDto.Access">
            <summary>
                权限列表
            </summary>
        </member>
        <member name="P:JoyAdmin.Application.RBAC.Dtos.UserInput.keyword">
            <summary>
                查询关键字
            </summary>
        </member>
        <member name="T:JoyAdmin.Application.RBAC.RBACService">
            <summary>
                角色管理服务
            </summary>
        </member>
        <member name="M:JoyAdmin.Application.RBAC.RBACService.Login(JoyAdmin.Application.RBAC.Dtos.LoginInput)">
            <summary>
                登录（免授权）
            </summary>
            <param name="input"></param>
            <remarks>管理员：admin/654321；</remarks>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.RBAC.RBACService.GetUserInfo">
            <summary>
                查看用户信息
            </summary>
        </member>
        <member name="M:JoyAdmin.Application.RBAC.RBACService.GetAuth">
            <summary>
                权限列表
            </summary>
        </member>
        <member name="M:JoyAdmin.Application.RBAC.RBACService.SaveAuth(JoyAdmin.Application.RBAC.Dtos.SecurityDto)">
            <summary>
                保存权限
            </summary>
        </member>
        <member name="M:JoyAdmin.Application.RBAC.RBACService.DeleteAuth(System.Int64)">
            <summary>
                删除权限
            </summary>
        </member>
        <member name="M:JoyAdmin.Application.RBAC.RBACService.GetRole">
            <summary>
                角色列表
            </summary>
        </member>
        <member name="M:JoyAdmin.Application.RBAC.RBACService.GetAuthByRoleId(System.Int64)">
            <summary>
                获取某个角色的权限
            </summary>
        </member>
        <member name="M:JoyAdmin.Application.RBAC.RBACService.SaveRole(JoyAdmin.Application.RBAC.Dtos.RoleDto)">
            <summary>
                保存角色
            </summary>
        </member>
        <member name="M:JoyAdmin.Application.RBAC.RBACService.DeleteRole(System.Int64)">
            <summary>
                删除角色
            </summary>
        </member>
        <member name="M:JoyAdmin.Application.RBAC.RBACService.GiveRoleSecurity(JoyAdmin.Application.RBAC.Dtos.RoleSecurityInput)">
            <summary>
                为角色分配权限
            </summary>
        </member>
        <member name="M:JoyAdmin.Application.RBAC.RBACService.SearchEmployee(JoyAdmin.Application.RBAC.Dtos.UserInput)">
            <summary>
                查询员工
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.RBAC.RBACService.SaveEmployee(JoyAdmin.Application.RBAC.Dtos.UserDto)">
            <summary>
                保存员工
            </summary>
        </member>
        <member name="M:JoyAdmin.Application.RBAC.RBACService.DeleteEmployee(System.Int64)">
            <summary>
                删除员工
            </summary>
        </member>
        <member name="M:JoyAdmin.Application.RBAC.RBACService.GetRoleByUserId(System.Int64)">
            <summary>
                获取某个员工的角色
            </summary>
        </member>
        <member name="M:JoyAdmin.Application.RBAC.RBACService.GiveUserRole(JoyAdmin.Application.RBAC.Dtos.UserRoleInput)">
            <summary>
                为用户分配角色
            </summary>
        </member>
        <member name="M:JoyAdmin.Application.RBAC.RBACService.UpdatePwd(JoyAdmin.Application.RBAC.Dtos.UpdatePwdInput)">
            <summary>
                修改密码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.RBAC.RBACService.ResetPwd(System.Int64)">
            <summary>
                重置密码
            </summary>
            <param name="userid"></param>
            <returns></returns>
        </member>
        <member name="P:JoyAdmin.Application.Statistic.Dtos.StatisticRate.Ok">
            <summary>
                合格品
            </summary>
        </member>
        <member name="P:JoyAdmin.Application.Statistic.Dtos.StatisticRate.Ng">
            <summary>
                不良品
            </summary>
        </member>
        <member name="P:JoyAdmin.Application.Statistic.Dtos.StatisticRate.FeedQuality">
            <summary>
                进料数
            </summary>
        </member>
        <member name="M:JoyAdmin.Application.Statistic.StatisticService.Upload(JoyAdmin.Application.Statistic.Dtos.ProductionDto)">
            <summary>
                上传产量信息
            </summary>
            <param name="production">ProductionType 0进料 1 OK  2 NG</param>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.Statistic.StatisticService.GetRecentUpload(System.Int32,System.Int32)">
            <summary>
                获取获取
            </summary>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.Statistic.StatisticService.GetPassRates(JoyAdmin.Application.Statistic.Dtos.PassRateQueryDTo)">
            <summary>
                根据站位和时间对合格率数据进行聚合 device=”“ 查询总合格率
            </summary>
            <param name="passRateQueryDTo"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:JoyAdmin.Application.Statistic.StatisticService.GetPassRateByDevice(System.DateTime,System.DateTime)">
            <summary>
                查询时间段内所有站位的合格率
            </summary>
            <param name="starttime"></param>
            <param name="endtime"></param>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.Statistic.StatisticService.GetPassRateByWorkOrder(System.String)">
            <summary>
            根据工单号查询各站位的合格率
            </summary>
            <param name="workOrder"></param>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.Statistic.StatisticService.QueryNgCounts(JoyAdmin.Application.Statistic.Dtos.QueryNgCount)">
            <summary>
                获取各站的失效原因分布
            </summary>
            <param name="queryDTo">
                AggregationType.Hour => 0,
                AggregationType.Day =>1,
                AggregationType.Week => 2,
                AggregationType.Month => 3,
                AggregationType.None=>4
            </param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:JoyAdmin.Application.System.SystemService.GetTestError">
            <summary>
                测试错误
            </summary>
        </member>
        <member name="M:JoyAdmin.Application.System.SystemService.SaveErrorLogger(System.Object)">
            <summary>
                保存前端错误
            </summary>
        </member>
        <member name="M:JoyAdmin.Application.System.SystemService.testvoid">
            <summary>
                测试void
            </summary>
        </member>
        <member name="M:JoyAdmin.Application.UploadData.MachineDataService.UploadData(JoyAdmin.Application.UploadData.Dtos.UploadDataDto)">
            <summary>
                上传数据
            </summary>
            <param name="uploadData"></param>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.UploadData.MachineDataService.BatchUploadData(System.Collections.Generic.List{JoyAdmin.Application.UploadData.Dtos.UploadDataDto})">
            <summary>
                批量上传数据
            </summary>
            <param name="uploadData"></param>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.UploadData.MachineDataService.BindShellCode(JoyAdmin.Application.UploadData.Dtos.ShellCodeBindingDto)">
            <summary>
                绑定二维码
            </summary>
            <param name="shellCodeBindingDto">绑定参数</param>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.UploadData.MachineDataService.GetBindingData(System.Int32,System.Int32)">
            <summary>
                查看绑定数据
            </summary>
            <param name="shellCodeBindingDto">绑定参数</param>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.UploadData.MachineDataService.GetData(JoyAdmin.Application.UploadData.Dtos.QueryDTo)">
            <summary>
                获取上传的原始数据
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.UploadData.MachineDataService.GetUploadDataNames(JoyAdmin.Application.UploadData.Dtos.TimeSpanDto)">
            <summary>
                获取所有的上传数据名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.UploadData.MachineDataService.GetProductDataByName(JoyAdmin.Application.UploadData.Dtos.QueryDataByNameDto)">
            <summary>
                根据名称获取数据
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.UploadData.MachineDataService.GetProductDataByNameNoPage(JoyAdmin.Application.UploadData.Dtos.QueryDataByNameDto)">
            <summary>
            根据名称获取生产数据，不分页，用于导出，使用filestream
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.UploadData.MachineDataService.GetProductData(JoyAdmin.Application.UploadData.Dtos.TimeSpanDto)">
            <summary>
                获取所有生产数据
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:JoyAdmin.Application.UploadData.MachineDataService.Get(System.String)">
            <summary>
                根据二维码获取所有测试数据
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
    </members>
</doc>
